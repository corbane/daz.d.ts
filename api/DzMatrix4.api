CLS DzMatrix4 : Object
  > online
    http://docs.daz3d.com/doku.php/public/software/dazstudio/4/referenceguide/scripting/api_reference/object_index/matrix4_dz
  > summary
    A 4 x 4 transformation matrix.

### description
  > summary
    A transformation matrix consisting of 4 rows and 4 columns.

### properties

PRP Boolean : isIdentity
  > summary
    Whether or not the matrix is identity

PRP Number : m11
  > summary
    The value of the matrix at [1, 1]

PRP Number : m12
  > summary
    The value of the matrix at [1, 2]

PRP Number : m13
  > summary
    The value of the matrix at [1, 3]

PRP Number : m14
  > summary
    The value of the matrix at [1, 4]

PRP Number : m21
  > summary
    The value of the matrix at [2, 1]

PRP Number : m22
  > summary
    The value of the matrix at [2, 2]

PRP Number : m23
  > summary
    The value of the matrix at [2, 3]

PRP Number : m24
  > summary
    The value of the matrix at [2, 4]

PRP Number : m31
  > summary
    The value of the matrix at [3, 1]

PRP Number : m32
  > summary
    The value of the matrix at [3, 2]

PRP Number : m33
  > summary
    The value of the matrix at [3, 3]

PRP Number : m34
  > summary
    The value of the matrix at [3, 4]

PRP Number : m41
  > summary
    The value of the matrix at [4, 1]

PRP Number : m42
  > summary
    The value of the matrix at [4, 2]

PRP Number : m43
  > summary
    The value of the matrix at [4, 3]

PRP Number : m44
  > summary
    The value of the matrix at [4, 4]

### constructors

CTR DzMatrix4( Boolean initIdentity=false )
  > summary
    Default Constructor.
  > parameters
    + initIdentity - If true, the matrix will be set to the identity matrix, otherwise, the matrix values will be indeterminate.

CTR DzMatrix4( Number m11, Number m21, Number m31, Number m41, Number m12, Number m22, Number m32, Number m42, Number m13, Number m23, Number m33, Number m43, Number m14, Number m24, Number m34, Number m44 )
  > summary
    Constructs a 4×4 matrix from 16 elements in “Column Major” order.
  > parameters
    + m11 - The value of the matrix at [1, 1]
    + m21 - The value of the matrix at [2, 1]
    + m31 - The value of the matrix at [3, 1]
    + m41 - The value of the matrix at [4, 1]
    + m12 - The value of the matrix at [1, 2]
    + m22 - The value of the matrix at [2, 2]
    + m32 - The value of the matrix at [3, 2]
    + m42 - The value of the matrix at [4, 2]
    + m13 - The value of the matrix at [1, 3]
    + m23 - The value of the matrix at [2, 3]
    + m33 - The value of the matrix at [3, 3]
    + m43 - The value of the matrix at [4, 3]
    + m14 - The value of the matrix at [1, 4]
    + m24 - The value of the matrix at [2, 4]
    + m34 - The value of the matrix at [3, 4]
    + m44 - The value of the matrix at [4, 4]
  > example
    // Create a new 4x4 matrix
    var mtx4 = new DzMatrix4( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 );
    // Print the input sequence, for comparison

    print( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 );
    // Print elements of the matrix in column major order

    print(
    	mtx4.m11, mtx4.m21, mtx4.m31, mtx4.m41,
    	mtx4.m12, mtx4.m22, mtx4.m32, mtx4.m42,
    	mtx4.m13, mtx4.m23, mtx4.m33, mtx4.m43,
    	mtx4.m14, mtx4.m24, mtx4.m34, mtx4.m44 );

CTR DzMatrix4( DzVec3 xAxis, DzVec3 yAxis, DzVec3 zAxis )
  > summary
    Constructor from three axes of the rotation coord system. These are assumed to be (but do not have to be if a sheared or warped coord system is desired) to be orthogonal unit vectors.
  > since
    4.6.4.98

CTR DzMatrix4( DzQuat rot )
  > summary
    Constructs a 4×4 matrix from a quaternion. Initializes the matrix to the given rotation.
  > parameters
    + rot - The rotation to initialize the matrix to.
  > since
    4.6.4.98

CTR DzMatrix4( DzMatrix4 mat )
  > summary
    Copy Constructor.
  > parameters
    + mat - The matrix to copy.

### methods

FUN DzMatrix4 : inverse()
  > returns
    The inverse of the matrix.

FUN void : invert()
  > summary
    Test and choose best inverse for current matrix
  > since
    4.9.2.18

FUN void : makeIdentity()
  > summary
    Sets the matrix to be identity

FUN DzMatrix3 : matrix3()
  > returns
    The value of this matrix as a DzMatrix3.
  > since
    4.9.2.18

FUN DzMatrix4 : multiply( DzMatrix4 mat )
  > summary
    Calculates the multiplication of this matrix by the given matrix.
  > parameters
    + mat - The matrix to multiply by
  > returns
    The result of the multiplication

FUN DzVec3 : multMatrixVec( DzVec3 vec )
  > summary
    Multiplies matrix by given column vector, giving column vector result
  > parameters
    + vec - The vector to multiplying this matrix by
  > returns
    The result of multiplying the given vector through this matrix

FUN DzVec3 : multVecMatrix( DzVec3 vec )
  > summary
    Multiplies given row vector by matrix, giving row vector result
  > parameters
    + src - The vector to multiplying this matrix by
  > returns
    The result of multiplying the given vector through this matrix

FUN Boolean : orthogonal()
  > summary
    Test for orthogonal 3×3 sub-matrix (orthonormal rows)
  > since
    4.6.4.98

FUN void : preScale( Number scale )
  > summary
    Accumulates a uniform scale by pre-multiplying.

FUN void : preScale( DzVec3 vec )
  > summary
    Accumulates a general scale by pre-multiplying.
  > parameters
    + scale - The scale to use

FUN void : preScale( Number scale, DzVec3 direction )
  > summary
    Accumulates a scale along an arbitrary axis by pre-multiplying.
  > since
    4.9.2.18

FUN void : preShearXY( Number xShear, Number yShear )
  > summary
    Shears the matrix along the x and y axis (by pre-multiplying).
  > parameters
    + xShear - The value to shear along the x axis
    + yShear - The value to shear along the y axis
  > since
    4.9.2.18

FUN void : preShearXZ( Number xShear, Number zShear )
  > summary
    Shears the matrix along the x and z axis (by pre-multiplying).
  > parameters
    + xShear - The value to shear along the x axis
    + zShear - The value to shear along the z axis
  > since
    4.9.2.18

FUN void : preShearYZ( Number yShear, Number zShear )
  > summary
    Shears the matrix along the y and z axis (by pre-multiplying).
  > parameters
    + yShear - The value to shear along the y axis
    + zShear - The value to shear along the z axis
  > since
    4.9.2.18

FUN void : preTranslate( DzVec3 vec )
  > summary
    Accumulate a translation by pre-multiplying.
  > parameters
    + vec - The point at which to translate

FUN void : rotate( DzQuat rot )
  > summary
    Accumulate rotation (by post-multiplying).

FUN void : rotateX( Number radians )
  > summary
    Accumulate rotation around the X axis (by post-multiplying).

FUN void : rotateY( Number radians )
  > summary
    Accumulate rotation around the Y axis (by post-multiplying).

FUN void : rotateZ( Number radians )
  > summary
    Accumulate rotation around the Z axis (by post-multiplying).

FUN DzVec3 : row( Number i )
  > returns
    The first three elements of the i'th row of the matrix.
  > since
    4.9.2.18

FUN void : scale( DzVec3 vec )
  > summary
    Accumulates a general scale (by post-multiplying).

FUN void : scale( Number scale )
  > summary
    Accumulates a uniform scale (by post-multiplying).

FUN void : scale( Number scale, DzVec3 direction )
  > summary
    Accumulates a scale along an arbitrary axis (by post-multiplying).
  > since
    4.9.2.18

FUN void : setRow( Number i, DzVec3 vec )
  > summary
    TODO: Add description.

FUN void : setTrans( DzVec3 vec )
  > summary
    Sets matrix to translate by given vector, leaving rotation as is
  > parameters
    + vec - The point at which to translate

FUN void : shearXY( Number xShear, Number yShear )
  > summary
    Shears the matrix along the x and y axis (by post-multiplying).
  > parameters
    + xShear - The value to shear along the x axis
    + yShear - The value to shear along the y axis
  > since
    4.9.2.18

FUN void : shearXZ( Number xShear, Number zShear )
  > summary
    Shears the matrix along the x and z axis (by post-multiplying).
  > parameters
    + xShear - The value to shear along the x axis
    + zShear - The value to shear along the z axis
  > since
    4.9.2.18

FUN void : shearYZ( Number yShear, Number zShear )
  > summary
    Shears the matrix along the y and z axis (by post-multiplying).
  > parameters
    + yShear - The value to shear along the y axis
    + zShear - The value to shear along the z axis
  > since
    4.9.2.18

FUN Number : trace()
  > returns
    The trace of the matrix
  > since
    4.9.2.18

FUN void : translate( DzVec3 vec )
  > summary
    Accumulate a translation (by post-multiplying).
  > parameters
    + vec - The point at which to translate

FUN DzMatrix4 : transpose()
  > returns
    The transpose of the matrix.
  > since
    4.9.2.18